package com.example.hotel.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.example.hotel.entity.*;
import com.example.hotel.repo.*;

@Controller // This means that this class is a Controller
public class UserController {
	   @Autowired // This means to get the bean called userRepository
		// Which is auto-generated by Spring, we will use it to handle the data
		private User1Repository UserRepo ;
		
	   
	   
	  
	   
	 
		@GetMapping("/demo7/h")
		public String hello() {
			return "usermanage";
		}
		
		
		@GetMapping("/demo7/home")
		public String homepage() {
			return "umember";
		}
		@GetMapping(path="/demo7/add") // Map ONLY POST Requests
		public String addNewUser (@RequestParam int user_id,String uname,String email,String u_address,String u_mobile,@RequestParam int hotel_id) 
		{
			
			System.out.println("insode add" +user_id+" " +uname +" "+email+" "+u_address+" "+ u_mobile+" "+hotel_id);
			
		User1 obj = new User1();
		obj.setUser_id(user_id);
		obj.setUname(uname);
		obj.setEmail(email);
		obj.setU_address(u_address);
		obj.setU_mobile(u_mobile);
		obj.setHotel_id(hotel_id);
		UserRepo.save(obj);
	
		return "uhome";
		}

		@GetMapping(path="/demo7/all")
		public String getAllUsers() {
			return "ufetch";

		}

		
		@GetMapping(path="/demo7/isExist")
		public @ResponseBody boolean isExist() {
			
			// This returns a JSON or XML with the users
		System.out.println("inside all");
		return UserRepo.existsById(101);
		}

		
		@GetMapping("/demo7/delete")
		public String delPage() {
			return "udel";
		}
		@GetMapping(path = "/demo7/deleted")
		public  String delete(@RequestParam int user_id) {
			System.out.println("inside all");
			UserRepo.deleteById(user_id);
			return "uhome";
		}

		@GetMapping(path = "/demo7/updated")
		public String update(@RequestParam int user_id,String uname,String email,String u_address,String u_mobile,@RequestParam int hotel_id) 
				{

			System.out.println("inside all");

			User1 obj = new User1();
			obj.setUser_id(user_id);
			obj.setUname(uname);
			obj.setEmail(email);
			obj.setU_address(u_address);
			obj.setU_mobile(u_mobile);
			obj.setHotel_id(hotel_id);
			UserRepo.save(obj);
		
			return "uhome";
		}
		
		@GetMapping(path = "/demo7/update")
		
	public String uppage() {
		return "userupdating";


	}
	}

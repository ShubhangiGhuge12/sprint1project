package com.example.hotel.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.hotel.entity.*;
import com.example.hotel.repo.*;

@Controller // This means that this class is a Controller
public class InventoryController {
	
	
		
			@Autowired // This means to get the bean called userRepository
		//Which is auto-generated by Spring, we will use it to handle the data
		private InventoryRepository InvRepository;
			
			
			@GetMapping("/demo8/h")
			public String hello() {
				return "invmanage";
			}
			

			
			@GetMapping("/demo8/home")
			public String homepage() {
				return "invmember";
			}
			
			
		@GetMapping(path="/demo8/add") // Map ONLY POST Requests
		public String addNewUser (@RequestParam int inv_id,@RequestParam int inv_num,String inv_desc,String inv_items,String inv_type) {
			
			System.out.println("insode add" +inv_id +" "+inv_num+" "+inv_desc+" "+inv_items+" "+inv_type);
			
		Inventory obj = new Inventory();
			
			obj.setInv_id(inv_id);
			obj.setInv_num(inv_num);
			obj.setInv_desc(inv_desc);
			obj.setInv_items(inv_items);
			obj.setInv_type(inv_type);
			
			InvRepository.save(obj);

			return "invhome";
			
		}

		@GetMapping(path="/demo8/all")
		public String getAllUsers() {
			return "invfetch";


		}



		@GetMapping(path="/demo8/isExist")
		public @ResponseBody boolean isExist() {
			
			// This returns a JSON or XML with the users
		System.out.println("inside all");
		return InvRepository.existsById(101);
		}

		@GetMapping("/demo8/delete")
		public String delPage() {
			return "invdel";
		}
		@GetMapping(path = "/demo8/deleted")
		public  String delete(@RequestParam int inv_id) {
			System.out.println("inside all");
			InvRepository.deleteById(inv_id);
			return "invhome";
		}



		@GetMapping(path = "/demo8/updated")
		public String updated(@RequestParam int inv_id,@RequestParam int inv_num,String inv_desc,String inv_items,String inv_type) {

		Inventory obj = new Inventory();
			
			obj.setInv_id(inv_id);
			obj.setInv_num(inv_num);
			obj.setInv_desc(inv_desc);
			obj.setInv_items(inv_items);
			obj.setInv_type(inv_type);

			
			InvRepository.save(obj);

			return "invhome";


		}
		@GetMapping(path = "/demo8/update")
		
		public String uppage() {
		return "invupdating";


		}
		}



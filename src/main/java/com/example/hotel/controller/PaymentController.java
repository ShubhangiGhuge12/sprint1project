package com.example.hotel.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.hotel.entity.*;
import com.example.hotel.repo.*;


@Controller // This means that this class is a Controller



public class PaymentController {
	
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private PaymentRepository PaymentRepository;
	@GetMapping("/demo5/h")
	public String hello() {
		return "Paymanage";
	}
	
	
	@GetMapping("/demo5/home")
	public String homepage() {
		return "Pmember";
	}

	
	@GetMapping(path="/demo5/add") // Map ONLY POST Requests
	public String addNewUser (@RequestParam int pay_id,@RequestParam int pay_amt,String pay_desc ) 
	{
		
		System.out.println("inside add" +pay_id+"  "+pay_amt+" "+ pay_desc );
		

		Payment obj = new Payment();
		obj.setPay_desc(pay_desc);
		obj.setPay_id(pay_id);
		obj.setPay_amt(pay_amt);
	
		
		PaymentRepository.save(obj);

	
	return "Phome";
	}

	@GetMapping(path = "/demo5/all")
	public String getAllUsers() {
		return "Pfetch";

	}


	

	@GetMapping(path="/demo5/isExist")
	public @ResponseBody boolean isExist() {
		
		// This returns a JSON or XML with the users
	System.out.println("inside all");
	return PaymentRepository.existsById(1);
	}

	
	@GetMapping("/demo5/delete")
	public String delPage() {
		return "paydel";
	}
	@GetMapping(path = "/demo5/deleted")
	public  String delete(@RequestParam int pay_id) {
		System.out.println("inside all");
		PaymentRepository.deleteById(pay_id);
		return "Phome";

	}


	@GetMapping(path = "/demo5/updated")
	public  String updated(@RequestParam int pay_id, @RequestParam int pay_amt,  String pay_desc
		) {

		// int ids = Integer.parseInt(id);
		System.out.println("inside all");

		Payment obj = new Payment();
		obj.setPay_id(pay_id);
		obj.setPay_amt(pay_amt);
		obj.setPay_desc(pay_desc);
	
		
		PaymentRepository.save(obj);
		return "Phome";


	}
	@GetMapping(path = "/demo5/update")
	public String uppage() {
	return "Pupdating";


	
}
}



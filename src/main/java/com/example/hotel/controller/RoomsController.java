package com.example.hotel.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.example.hotel.entity.*;
import com.example.hotel.repo.*;

@Controller // This means that this class is a Controller

public class RoomsController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private RoomsRepository Roomrepo;
	
	@GetMapping("/demo4/h")
	public String hello() {
		return "roomsmanage";
	}
	
	
	@GetMapping("/demo4/home")
	public String homepage() {
		return "Rmember";
	}
	@GetMapping(path="/demo4/add") // Map ONLY POST Requests
	public String addNewUser (@RequestParam int r_id,String fname,String lname,@RequestParam int hotel_id,@RequestParam int id) 
	{
		
		System.out.println("insode add" +r_id+" " +fname +" "+lname+" "+hotel_id+" "+ id );
		
	Rooms obj = new Rooms();
	obj.setR_id(r_id);
	obj.setFname(fname);
	obj.setLname(lname);
	obj.setHotel_id(hotel_id);
	obj.setId(id);
	Roomrepo.save(obj);
	//userRepository.
	//userRepository.
	return "Rhome";
	}

	@GetMapping(path="/demo4/all")
	public String getAllUsers() {
		return "Rfetch";

	}

	
	@GetMapping(path="/demo4/isExist")
	public @ResponseBody boolean isExist() {
		
		// This returns a JSON or XML with the users
	System.out.println("inside all");
	return Roomrepo.existsById(101);
	}

	
	@GetMapping("/demo4/delete")
	public String delPage() {
		return "Rdel";
	}
	@GetMapping(path = "/demo4/deleted")
	public  String delete(@RequestParam int r_id) {
		System.out.println("inside all");
		Roomrepo.deleteById(r_id);
		return "Rhome";
	}

	@GetMapping(path = "/demo4/updated")
	public String update(@RequestParam int r_id, @RequestParam int id,String fname,String lname,@RequestParam int hotel_id
		) {

		// int ids = Integer.parseInt(id);
		System.out.println("inside all");

		Rooms obj = new Rooms();
		obj.setR_id(r_id);
		obj.setHotel_id(hotel_id);
		obj.setId(id);
		obj.setLname(lname);
		obj.setFname(fname);
		Roomrepo.save(obj);
	
		return "Rhome";
	}
	
	@GetMapping(path = "/demo4/update")
	
public String uppage() {
	return "Rupdating";


}
}
